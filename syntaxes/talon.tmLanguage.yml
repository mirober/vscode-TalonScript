---
name: TalonScript
scopeName: source.talon
patterns:
  - include: "#body-header"
  - include: "#header"
  - include: "#body-noheader"
  - include: "#comment"
  - include: "#settings"
repository:
  header:
    begin: (?=^app:|title:|os:|tag:|list:|language:)
    end: (?=^-$)
    patterns:
      - include: "#comment"
      - include: "#context"
  context:
    match: "(.*): (.*)"
    captures:
      "1":
        name: entity.name.tag.talon
        patterns:
          - match: (and |or )
            name: keyword.operator.talon
      "2":
        name: entity.name.type.talon
        patterns:
          - include: "#comment"
          - include: "#regexp"
  regexp:
    begin: (/)
    end: (/)
    name: string.regexp.talon
    patterns:
      - match: \.
        name: support.other.match.any.regexp
      - match: \$
        name: support.other.match.end.regexp
      - match: \^
        name: support.other.match.begin.regexp
      - match: \\\.|\\\*|\\\^|\\\$|\\\+|\\\?
        name: constant.character.escape.talon
      - match: \[(\\\]|[^\]])*\]
        name: constant.other.set.regexp
      - match: \*|\+|\?
        name: keyword.operator.quantifier.regexp
  body-header:
    begin: ^-$
    end: (?=not)possible
    patterns:
      - include: "#body-noheader"
  body-noheader:
    patterns:
      - include: "#comment"
      - include: "#other-rule-definition"
      - include: "#speech-rule-definition"
  # ------------------------------------------------
  capture:
    match: (\<[a-zA-Z0-9._]+\>)
    name: variable.parameter.talon
  list:
    match: ({[a-zA-Z0-9._]+?})
    name: string.interpolated.talon
  comment:
    match: (\s*#.*)$
    name: comment.line.number-sign.talon
  operator:
    match: \s(\+|-|\*|/|or)\s
    name: keyword.operator.talon
  number:
    match: (?<=\b)\d+(\.\d+)?
    # (?=$|\s)
    name: constant.numeric.talon
  varname:
    match: ([a-zA-Z0-9._])(_(list|\d+)(?=[^a-zA-Z0-9._]))?
    name: variable.parameter.talon
    captures:
      "2":
        name: constant.numeric.talon
        patterns:
          - match: _
            name: keyword.operator.talon
  # STRINGS ------------------------------------------------
  fstring:
    match: "{(.+?)}"
    name: constant.character.format.placeholder.talon
    captures:
      "1":
        patterns:
          - include: "#action"
          - include: "#operator"
          - include: "#number"
          - include: "#varname"
          - include: "#qstring"
  string-body:
    patterns:
      - match: "{{|}}"
        name: string.quoted.double.talon
      - match: \\\\|\\n|\\t|\\r|\\"|\\'
        name: constant.character.escape.python
      - include: "#fstring"
  qstring:
    begin: ("|')
    end: (\1)|$
    name: string.quoted.double.talon
    beginCaptures:
      "1":
        name: punctuation.definition.string.begin.talon
    endCaptures:
      "1":
        name: punctuation.definition.string.end.talon
    patterns:
      - include: "#string-body"
  # Same as above, but includes key stuff
  keystring:
    begin: ("|')
    end: (\1)|$
    name: string.quoted.double.talon
    beginCaptures:
      "1":
        name: punctuation.definition.string.begin.talon
    endCaptures:
      "1":
        name: punctuation.definition.string.end.talon
    patterns:
      - include: "#string-body"
      - include: "#key-mods"
      - include: "#key-prefixes"
  qstring-long:
    begin: ("""|''')
    end: (\1)
    name: string.quoted.triple.talon
    beginCaptures:
      "1":
        name: punctuation.definition.string.begin.talon
    endCaptures:
      "1":
        name: punctuation.definition.string.end.talon
    patterns:
      - include: "#string-body"
  # KEY ------------------------------------------------
  action-key:
    match: key(\()(.*)(\))
    name: entity.name.function.talon
    captures:
      "1":
        name: punctuation.definition.parameters.begin.talon
      "2":
        name: variable.parameter.talon
        patterns:
          - include: "#key-prefixes"
          - include: "#key-mods"
          - include: "#keystring"
      "3":
        name: punctuation.definition.parameters.key.talon
  key-prefixes:
    match: (ctrl|shift|cmd|alt|win|super)(-)
    captures:
      "1":
        name: keyword.control.talon
      "2":
        name: keyword.operator.talon
  key-mods:
    match: (:)(up|down|change|repeat|start|stop|\d+)
    captures:
      "1":
        name: keyword.operator.talon
      "2":
        name: keyword.control.talon
    name: keyword.operator.talon
  # GAMEPAD/DECK ------------------------------------------
  action-gamepad:
    match: (deck|gamepad|action|face|parrot)(\()(.*)(\))
    name: entity.name.function.talon
    captures:
      "2":
        name: punctuation.definition.parameters.begin.talon
      "3":
        name: variable.parameter.talon
        patterns:
          - include: "#key-mods"
      "4":
        name: punctuation.definition.parameters.key.talon
  # ACTION ------------------------------------------------
  argsep:
    match: ","
    name: punctuation.separator.talon
  action:
    begin: "([a-zA-Z0-9._]+)(\\()"
    end: (\))
    beginCaptures:
      "1":
        name: entity.name.function.talon
        patterns:
          - match: "\\."
            name: punctuation.separator.talon
      "2":
        name: punctuation.definition.parameters.begin.talon
    endCaptures:
      "1":
        name: punctuation.definition.parameters.end.talon
    patterns:
      - include: "#action"
      - include: "#qstring-long"
      - include: "#qstring"
      - include: "#argsep"
      - include: "#number"
      - include: "#operator"
      - include: "#varname"
    name: variable.parameter.talon
  # RULE ------------------------------------------------
  speech-rule-definition:
    begin: "^(.*?):"
    end: (?=^[^\s#])
    beginCaptures:
      "1":
        name: entity.name.tag.talon
        patterns:
          - match: ^\^
            name: string.regexp.talon
          - match: \$$
            name: string.regexp.talon
          - match: \(
            name: punctuation.definition.parameters.begin.talon
          - match: \)
            name: punctuation.definition.parameters.end.talon
          - match: \|
            name: punctuation.separator.talon
          - include: "#capture"
          - include: "#list"
    patterns:
      - include: "#statement"
  other-rule-definition:
    begin: "^([a-z]+\\(.*[^\\-]\\)|[a-z]+\\(.*--\\)|[a-z]+\\(-\\)|[a-z]+\\(\\)):"
    end: (?=^[^\s#])
    beginCaptures:
      "1":
        name: entity.name.tag.talon
        patterns:
          - include: "#action-key"
          - include: "#action-gamepad"
          - include: "#rule-specials"
    patterns:
      - include: "#statement"
  rule-specials:
    match: (settings|tag)(\()(\))
    captures:
      "1":
        name: entity.name.function.talon
      "2":
        name: punctuation.definition.parameters.begin.talon
      "3":
        name: punctuation.definition.parameters.end.talon
  assignment:
    begin: (\S*)(\s?=\s?)
    end: "\n"
    beginCaptures:
      "1":
        name: variable.other.talon
      "2":
        name: keyword.operator.talon
    patterns:
      - include: "#comment"
      - include: "#expression"
  expression:
    patterns:
      - include: "#qstring-long"
      - include: "#action-key"
      - include: "#action"
      - include: "#operator"
      - include: "#number"
      - include: "#qstring"
      - include: "#varname"
  statement:
    patterns:
      - include: "#comment"
      - include: "#qstring-long"
      - include: "#action-key"
      - include: "#action"
      - include: "#qstring"
      - include: "#assignment"
